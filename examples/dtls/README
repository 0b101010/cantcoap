These examples use libevent2 and tinydtls.o

libevent2 is used for efficient handling of incoming requests on the server.

The client is assumed to be more lightweight so doesn't use libevent2, but as
you will observe, in CoAP "client" and "server" are strange terms because 
the entities are more like peers. So you can use the server setup for a client
if you want.


tinydtls provides basic encryption. At present I only illustrate the use of 
a pre-shared key, but tinydtls also supports raw key pairs, so I will add
this in at a later date
